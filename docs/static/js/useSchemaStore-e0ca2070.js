var B=Object.defineProperty;var r=Object.getOwnPropertySymbols;var F=Object.prototype.hasOwnProperty,R=Object.prototype.propertyIsEnumerable;var p=(e,o,s)=>o in e?B(e,o,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[o]=s,d=(e,o)=>{for(var s in o||(o={}))F.call(o,s)&&p(e,s,o[s]);if(r)for(var s of r(o))R.call(o,s)&&p(e,s,o[s]);return e};import{a5 as q,g as n}from"./vendor-0fc4fabe.js";import{s as z}from"./database.api-f55d9a49.js";const g=200,h=220,v=45,J=332,C=40,y=60;function Z(){const e=q(),o=n(()=>e.state.schema),s=n(()=>o.value.pageInfo),f=n(()=>o.value.pageConfig),m=n(()=>o.value.comps),b=n(()=>o.value.selectedCom),w=n(()=>o.value.hoveredCom),c=n(()=>o.value.toolbar),S=n(()=>o.value.toolbox),P=n(()=>o.value.canvas),I=n(()=>{const a=c.value;let t=0;return a.layer&&(t+=g),a.components?t+=h:t+=v,a.config&&(t+=J),t}),O=n(()=>{const a=c.value;let t=0;return a.toolbox&&(t+=C),t}),D=n(()=>{const a=c.value;let t=y;return a.layer&&(t+=g),a.components?t+=h:t+=v,t}),T=n(()=>{const a=c.value;let t=40+y;return a.toolbox&&(t+=C),t});async function x(a){await e.dispatch("schema/toggleLayerPanel",a)}async function L(a){await e.dispatch("schema/toggleCompsPanel",a)}async function H(a){await e.dispatch("schema/toggleConfigPanel",a)}async function _(a){await e.dispatch("schema/toggleToolbox",a)}async function X(a){await e.dispatch("schema/setPageInfo",a)}async function Y({component:a,index:t}){await e.dispatch("schema/addCom",{component:a,index:t})}async function A(a){await e.dispatch("schema/copyCom",a)}async function G(a){await e.dispatch("schema/deleteCom",a)}async function M(a){await e.dispatch("schema/hoveredCom",a)}async function N(a){await e.dispatch("schema/selectedCom",a)}async function V(a,t){await e.dispatch("schema/moveCom",{id:a,moveType:t})}const u=()=>({offsetX:I.value,offsetY:O.value});async function W(){await e.dispatch("schema/autoCanvasScale",u)}async function E(a){await e.dispatch("schema/setCanvasScale",d({scale:a},u()))}async function j({key:a,value:t}){const l={left:"x",top:"y"};await e.dispatch("schema/setShapeSingleStyle",{key:l[a],value:t})}async function i(a){await e.commit("schema/setLoading",a)}async function $(a){await e.dispatch("schema/loadScreenData",a)}async function k(){let a={};try{await i(!0);const t=s.value.id,l={pageInfo:s.value,pageConfig:f.value,comps:m.value};a=await z(t,l)}catch(t){a={}}return await i(!1),a}return{pageInfo:s,canvas:P,toolbar:c,toolbox:S,pageConfig:f,comps:m,hoveredCom:w,selectedCom:b,getPanelOffsetLeft:D,getPanelOffsetTop:T,setPageInfo:X,toggleLayerPanel:x,toggleCompsPanel:L,toggleConfigPanel:H,toggleToolbox:_,addCom:Y,copyCom:A,deleteCom:G,onCompHovered:M,onCompSelected:N,onCompMoved:V,autoCanvasScale:W,setCanvasScale:E,setSingleComAttr:j,setGlobalLoading:i,loadScreenData:$,saveScreenData:k}}export{Z as u};
